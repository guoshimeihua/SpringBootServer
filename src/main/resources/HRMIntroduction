1、服务器返回客户端的数据格式：

成功的时候，返回数据包含code data message，data如果为空的话，就返回一个空即可。
如果查询的是单个对象，data里面就返回一个空的对象即可。
如果查询的是列表，data里面就返回一个空的数组即可。

失败的时候，返回数据包含code message，不包含data。

2、code message data 都放在controller中进行处理，afterCompletion用来处理对返回的数据进行加密，还有对返回的数据是否为空，以及其他情况
进行数据的校验。

3、返回的如果是列表的话，data里面的数据格式为JSONArray。返回的如果单个对象的话，data里面的数据格式为JSONObject。

4、部门API设计列表：

* GET /hrm/api/depts : 获取所有部门信息
* GET /hrm/api/depts/id : 获取某个指定部门的信息
* POST /hrm/api/depts : 新建一个部门
* PUT /hrm/api/depts/id : 更新某个指定部门的信息 （提供该部门的全部信息）
* PATCH /hrm/api/depts/id : 更新某个指定部门的信息 （提供该部门的部门信息）
* DELETE /hrm/api/depts/id : 删除某个指定部门的信息

在某些业务逻辑比较复杂的情况，现有的5个HTTP动词，不能满足业务的需求，再加动词方面修饰的路径(也就是RPC设计风格，比如/hrm/api/addDept，add是动词，就是典型的RPC风格)。

在更新数据信息的时候，如果都需要把该部门对象给创建出来的话，这个时候PUT和PATCH的作用就是一样的了。如果只是单独修改一个部门的部分信息，还是要使用PATCH来完成。如果要修改部门的
所有信息还是用PUT来完成。

5、